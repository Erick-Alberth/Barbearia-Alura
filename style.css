body {
    font-family: 'Montserrat', sans-serif;
}

header {
    background: #bbbbbb;
    padding: 20px 0; /*espa√ßo para cima e para baixo*/
}

.caixa {
    position: relative; /*para entrar o menu*/
    width: 940px; /*largura da p√°gina (tamanho padr√£o na web)*/
    margin: 0 auto ; /*espa√ßamento externo centralizado*/
}

nav {
    position: absolute; /*posi√ß√£o da navega√ß√£o*/
    top: 110px;
    right: 0; /*colocando a posi√ß√£o na direita*/
}

nav li{
    display: inline; /*itens um ao lado do outro*/
    margin: 0 0 0 15px;/*1¬∞top = topo, 2¬∞right = direita, 3¬∞para baixo, 4¬∞left = esquerda*/
}

nav a {
    text-transform: uppercase; /*transformando o texto em maiusculo*/
    color: black;
    font-weight: bold;/*font-weight = peso da fonte, bold = negrito*/
    font-size: 22px;
    text-decoration: none;/*text-decoration = decora√ß√£o de texto, none = nenhum*/
}

nav a:hover { /*hover: quando o mouse estiver por cima; quando o mouse estiver por cima dos links dentro do menu de navegaca√ß√£o*/
    color: #c78c19;
    text-decoration: underline; /*colocando o sublinhado*/
}

.produtos {
    width: 940px; /*largura*/
    margin: 0 auto; /*0 pra cima pra baixo e espa√ßamento automatico pros lados*/
    padding: 50px 0; /*espa√ßamento interno dos itens*/
}
.produtos li {
    display: inline-block;
    text-align: center; /*se alinhando no centro do bloco*/
    width: 30%; /*espa√ßamente entre eles*/
    vertical-align: top; /*se alinhando pela linha de cima*/
    margin: 0 1.5%;
    padding: 30px 20px;
    box-sizing:border-box; /*os 30% se tornam definitivos e os px de espa√ßamento interno est√£o dentro desses 30%*/
    border: 2px solid #000000;
    border-radius: 10px; /*top = superior, bottom = inferior, left = esquerdo, right; tb posso fazer border-radius: 10px 20px 30px 40px*/
    
}

.produtos li:hover {
    border-color: #c78c19;
}

.produtos li:active { /*active = ativado; quando o mouse estiver ativado (clicado) na lista de produtos*/
    border-color: #088c19;
}

.produtos li:hover h2 { /*quero que o h2, quando o mouse estiver ativado nos produtos da lista, fa√ßa...*/
    font-size: 34px;
}

.produtos h2 {
    font-size: 30px; /*tamanho da fonte*/
    font-weight: bold; /*peso da fonte em negrito*/
}

.produtos-descricao {
    font-size: 18px;
}

.produtos-preco {
    font-size: 22px; /*tamanho da fonte*/
    font-weight: bold; /*peso da fonte em negrito*/
    margin-top: 10px; /*espa√ßamento externo*/
}

footer {
    text-align: center;
    background: url("bg.jpg");
    padding: 40px 0; /*espa√ßamento interno*/
}

.copyright {
    color: #ffffff;
    font-size: 13px;
    margin: 20px 0 0;
}

form {
    margin: 40px 0;
}

form label, form legend {
    display: block;
    font-size: 20px;
    margin: 0 0 10px; /*zero para cima e direita, 10px para baixo*/
}

.input-padrao {
    display: block;
    margin: 0 0 20px;
    padding: 10px 25px;
    width: 50%;
}

.checkbox {
    margin: 20px 0;
}

.enviar {
    width: 40%;
    padding: 15px 0;
    background: orange;
    color: white; /*cor do texto*/
    font-weight: bold;
    font-size: 18px;
    border: none;
    border-radius: 5px;
    transition: 1s all; /*transi√ß√£o de cores para todos/all os elementos*/
    cursor: pointer; /*p cursos do mouse mude para a m√£ozinha*/
}

.enviar:hover {
    background: darkorange;
    transform: scale(1.2); /*scala = escala, medida... fa√ßo um c√°lculo proporcional, ele aumenta 20% para todas as coisas*/
}

table {
    margin: 20px 0 40px;
}

thead {
    background: #555555;
    color: white;
    font-weight: bold;
}

td, th {
    border: 1px solid #000000;
    padding: 8px 15px;
}


/*----------Parte de apresenta√ß√£o----------*/
.banner {
    width: 100%;
}

.titulo-principal {
    text-align: center;
    font-size: 2em; /*Se quisermos que a fonte de titulo-principal seja o dobro da fonte padr√£o, independe do tamanho dessa fonte padr√£o, utilizamos a medida em, a media proporcional para pixels. Se quisermos duas vezes o tamanho base (15 pixels), basta escrever 2em.*/
    margin: 0 0 1em;/*Incluiremos uma margem de 0 0 1em. √â sempre interessante inserir um espa√ßamento que seja proporcional ao tamanho da fonte, o que facilita a leitura do usu√°rio.*/
    clear: left; /*O float √© um recurso que altera completamente a estrutura da p√°gina, todos os elementos abaixo do float passam a ser afetados por ele. Podemos criar uma "barreira" que delimitar√° seu alcance na p√°gina.
    Adicionando a propriedade clear que "limpa" o float que est√° posicionado √† esquerda.*/
}

.principal {
    padding: 3em 0;
    background: #fefefe;
    width: 940px; /*largura*/
    margin: 0 auto;
}

.principal p {
    margin: 0 0 1em; /*espa√ßo entre em paragr√°fo e outro*/
}

.principal strong {
    font-weight: bold;
}

.principal em {
    font-style: italic;
}

.utensilios {
    width: 120px;
    float: left; /*float = flutua√ß√£o. Quando utilizamos este recurso, o elemento "descola" da p√°gina mas o que seria a sua sombra, continua sendo ocupada virtualmente, isto √©, o texto respeita esse espa√ßo ocupado. Para fazermos nossa imagem "flutuar" definiremos qual √© o lado que desejamos que a flutua√ß√£o ocorra, neste caso, left = esquerda.*/
    margin: 0 20px 20px 0;
}
/*----------Parte do mapa----------*/
.mapa {
    padding: 3em 0;
    background:linear-gradient(#fefefe, #888888) ;
}

/*linear-gradient() faz a transi√ß√£o entre as cores, podemos adicionar quantas cores quisermos, que o CSS ir√° administr√°-las automaticamente. Pode ajustar a inclina√ß√£o das cores, por exemplo 45deg e ent√£o ficar√£o posicionadas em 45¬∫. Num exemplo com quatro cores, h√° valores subentendidos em cada uma delas, na sequ√™ncia: 0%, 25%, 50%, e 75% para a √∫ltima cor da sequ√™ncia. Mas podemos manipular esses valores de acordo com nosso interesse , como definir que orange, por exemplo, ter√° o valor de 50%. Temos ainda a op√ß√£o radial(radial-gradient), que organiza a transi√ß√£o de cores de maneira circular.*/
.mapa-conteudo {
    width: 940px; /*largura*/
    margin: 0 auto;
}

.mapa p {
    margin: 0 0 2em;
    text-align: center;
}
/*----------Beneficios----------*/
.beneficios {
    padding: 3pm 0;
    background: #888888;
}

.conteudo-beneficios {
    width: 640px;
    margin: 0 auto;
}

.lista-beneficios {
    width: 40%;
    display: inline-block;
    vertical-align: top;
}

.itens {
    line-height: 1.5em; /*altura da linha*/
}

.itens:first-child {
    font-weight: bold;
}
/*Para sele√ß√£o de elementos espec√≠ficos temos tr√™s op√ß√µes: first-child - as altera√ß√£o ser√£o feitas no primeiro item. Escreveremos que o peso da fonte ser√° em negrito. Last-child - marcar√° o √∫ltimo item da lista. nth-child() - selecionar qualquer elemento da lista, que receber√° o n√∫mero que quisermos, como por exemplo 4, que se refere ao quarto elemento da lista. Podemos ainda utilizar valores como 2n, o que quer dizer marcamos todos os elementos pares da lista.*/

.itens:before {
    content: "üüä";
}
/*pseudo-elementos: first-letter = primeira letra, first-line = primeira linha, before = antes, after = depois; Esses dois elementos criam espa√ßo para que o CSS atue antes ou depois de um determinado conte√∫do. Esses conte√∫dos n√£o s√£o selecion√°veis pelo mouse, trata-se apenas de uma informa√ß√£o visual e n√£o um conte√∫do manipul√°vel.*/

.imagem-beneficios {
    width: 60%;
    opacity: 1;
    transition: 400ms;
    box-shadow: 10px 10px 10px 0 #000000;
}
/*Sombras: O nome da propriedade √© box-shadow, que possui a propriedade do eixo X, Y e uma cor. Podemos melhorar a qualidade est√©tica dessa sombra ao adicionarmos uma terceira propriedade chamada blur, em que podemos aplicar um n√≠vel de desfoque espec√≠fico, por exemplo, 5px, quanto maior a quantidade de pixels que inserirmos, mais claro ser√° o efeito de desfoque. Existe ainda uma quarta propriedade que configura a intensidade da borda a partir do tamanho do elemento, isto √©, o tamanho da sombra projetada. Podemos adicionar v√°rias sombras em um mesmo elemento, basta que o conte√∫do esteja separado por uma v√≠rgula. Podemos, ainda, inserir uma sombra com a cor rgba() com a camada de opacidade e borda vermelha. Outra possibilidade √© criar sombras internas, sombras internas n√£o s√£o desloc√°veis os valores no eixo X e Y devem ser 0, exemplo: box-shadow: inset 0 0 30px #FF000 (posicionamento ao centro, cor vermelha, se n√£o colocar os 30px a sombra vai possuir o msm tamanho do elemento e n√£o vai aparecer. Utilizaramos a propriedade text-shadow para por sombra em textos: text-shadow: 2px 2px #FF0000.*/

.imagem-beneficios:hover {
    opacity: 0.3;
}
/*opacidade: √© uma camada a mais posta sobre a imagem, como um insulfilme para a janela de carro, que oferece n√≠veis diferentes de prote√ß√£o contra o Sol. Utilizarmos a propriedade opacity que pode ter valores entre 0 a 1, sendo que 0 o elemento estar√° totalmente oculto. Se quisermos exibir a imagem com opacidade de 30%, ajustaremos o valor da propriedade para 0.3. Esse recurso √© interessante quando montamos composi√ß√µes visuais com elementos sobrepostos, ou para sugerir intera√ß√µes com o mouse ao utilizarmos o hover, quando o mouse estiver posicionado sobre a imagem teremos 1 de opacidade. Temos ainda o recurso transition, em que podemos estabelecer uma transi√ß√£o da opacidade em determinados milissegundos. Temos ainda o recurso transition, em que podemos estabelecer uma transi√ß√£o da opacidade em determinados milissegundos. Atualmente, podemos utilizar opacidade em todos os elementos e em cores: de fundo, texto, borda e assim por diante. No RGB, podemos utilizar mais uma camada - a de opacidade, chamada alfa, e botamos o valor que quiser, como: rgba(0,0,0,0.3).*/

/*----------Parte do video----------*/
.video {
    width: 560px;
    margin: 0 auto;
    padding: 2em;
}

@media screen and (max-width: 480px) { /*todas as telas que tiver at√© 450px, ter√£o um estilo diferente, reescrito*/
    .caixa, .principal, .conteudo-beneficios, .mapa-conteudo, .video {
        width: auto;
    }

    h1 {
        text-align: center;
    }

    nav {
        position: static;
    }

    .lista-beneficios, .imagem-beneficios {
        width: 100%;
    }
}

/*seletores avan√ßados: para selecionar os filhos diretos de <main>, utilizaremos o sinal >, e todo os outros par√°grafos ser√£o ignorados, afinal s√£o filhos diretos da <section> e n√£o de <main>. Para selecionar o primeiro par√°grafo que sucede uma imagem, do primeiro irm√£o que vem depois de um elemento, usamos img como elemento √¢ncora e para o primeiro irm√£o usamos o sinal de "+". Para selecionar todos os par√°grafos localizados depois de uma imagem usamos o seletor ~. No CSS podemos tb excluir itens espec√≠ficos, se quisermos excluir todos os par√°grafos que n√£o comp√µe missao, escreveremos .principal p:not(#missao). Um seletor pode sobrescrever o outro, pois todos possuem a mesma for√ßa.*/

/*propriedade de calc√∫lo: para calcular a propor√ß√£o e dimens√µes dos elementos em diferentes dispositivos, para que a imagem sempre ocupe a medida correta em outros dispositivos, utilizamos a propriedade calc. O calculo que desejamos realizar √© escrito entre par√™nteses, em que inserimos o primeiro valor, o tipo de oper√ß√£o e o resultado esperado. width: calc(40% - 26px); */

